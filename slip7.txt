Create angular JS Application that show the current Date and Time of the System (Use Interval Service)
<!DOCTYPE html>
<html lang="en" ng-app="dateTimeApp">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Date and Time</title>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body ng-controller="DateTimeController">

  <h2>Current Date and Time</h2>
  <p>{{ currentDateTime }}</p>

  <script>
    var app = angular.module('dateTimeApp', []);

    app.controller('DateTimeController', function($scope, $interval) {
      // Function to update current date and time
      function updateDateTime() {
        $scope.currentDateTime = new Date().toLocaleString();
      }

      // Call updateDateTime function initially
      updateDateTime();

      // Update current date and time every second using $interval service
      var interval = $interval(updateDateTime, 1000);

      // Cancel interval when controller is destroyed to prevent memory leaks
      $scope.$on('$destroy', function() {
        $interval.cancel(interval);
      });
    });
  </script>

</body>
</html>



Create a node js file named main.js for event-driven application. There should be a main loop
that listens for events, and then triggers a callback function when one of those events is
detected
// Import the 'events' module
const events = require('events');

// Create an EventEmitter object
const eventEmitter = new events.EventEmitter();

// Define event listeners
eventEmitter.on('event1', () => {
  console.log('Event 1 occurred');
});

eventEmitter.on('event2', () => {
  console.log('Event 2 occurred');
});

// Simulate events
setTimeout(() => {
  // Emit event1 after 2 seconds
  eventEmitter.emit('event1');
}, 2000);

setTimeout(() => {
  // Emit event2 after 4 seconds
  eventEmitter.emit('event2');
}, 4000);


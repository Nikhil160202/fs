Write angular JS by using ng-click directive to display an alert message after clicking the element.
<!DOCTYPE html>
<html lang="en" ng-app="clickAlertApp">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Click Alert</title>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body>

<div ng-controller="ClickAlertController">
  <button ng-click="displayAlert()">Click Me</button>
</div>

<script>
  var app = angular.module('clickAlertApp', []);

  app.controller('ClickAlertController', function($scope) {
    $scope.displayAlert = function() {
      alert("Button clicked!");
    };
  });
</script>

</body>
</html>



Create a Node.js file that opens the requested file and returns the content to the client. If
anything goes wrong, throw a 404 error
const http = require('http');
const fs = require('fs');
const path = require('path');

const server = http.createServer((req, res) => {
  // Extract the requested file path from the URL
  const filePath = path.join(__dirname, req.url);

  // Read the file content
  fs.readFile(filePath, (err, data) => {
    if (err) {
      // If file does not exist, return a 404 error
      if (err.code === 'ENOENT') {
        res.writeHead(404, {'Content-Type': 'text/plain'});
        res.end('404 Not Found');
      } else {
        // If any other error occurs, return a generic error
        res.writeHead(500, {'Content-Type': 'text/plain'});
        res.end('Internal Server Error');
      }
    } else {
      // If file exists, return its content
      res.writeHead(200, {'Content-Type': 'text/plain'});
      res.end(data);
    }
  });
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});

